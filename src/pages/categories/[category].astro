---
import { getCollection } from 'astro:content';
import ThreeColumnLayout from '@layouts/ThreeColumnLayout.astro';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog', ({ data }) => {
    return import.meta.env.PROD ? !data.draft : true;
  });
  
  // Get unique categories from posts
  const allCategories = new Set<string>();
  allPosts.forEach(post => {
    if (post.data.categories) {
      post.data.categories.forEach(category => allCategories.add(category));
    }
  });
  
  // Create a path for each category
  return Array.from(allCategories).map(category => {
    // Filter posts that belong to this category
    const filteredPosts = allPosts.filter(post => 
      post.data.categories && post.data.categories.includes(category)
    );
    
    return {
      params: { category: category.toLowerCase().replace(/\s+/g, '-') },
      props: { category, posts: filteredPosts },
    };
  });
}

const { category, posts } = Astro.props;

// Sort posts by date in descending order
const sortedPosts = posts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Format the category for display
const displayCategory = category.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase());

// Group posts by subject
const postsBySubject = sortedPosts.reduce((acc, post) => {
  const subject = post.data.subject || 'General';
  if (!acc[subject]) {
    acc[subject] = [];
  }
  acc[subject].push(post);
  return acc;
}, {} as Record<string, typeof sortedPosts>);

// Sort subjects by post count (descending)
const sortedSubjects = Object.entries(postsBySubject)
  .sort(([, a], [, b]) => b.length - a.length)
  .map(([name, posts]) => ({ name, posts }));
---

<ThreeColumnLayout title={`${displayCategory} | Categories | Modern Blog`}>
  <header class="pb-5 border-b border-sky-200 dark:border-sky-800 mb-6">
    <h1 class="text-4xl font-bold mb-2">{displayCategory}</h1>
    <p class="text-lg text-sky-600 dark:text-sky-300">
      Showing {sortedPosts.length} post{sortedPosts.length !== 1 ? 's' : ''} in the "{displayCategory}" category
    </p>
    <div class="mt-2">
      <a href="/categories" class="text-cyan-600 dark:text-cyan-400 hover:underline flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        All Categories
      </a>
    </div>
  </header>

  {sortedPosts.length === 0 ? (
    <div class="text-center py-8">
      <p class="text-xl text-sky-600 dark:text-sky-300">No posts found in this category.</p>
    </div>
  ) : (
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      {sortedSubjects.map(({ name, posts }) => (
        <div class="mb-6">
          <h2 class="text-xl font-bold mb-3 text-sky-800 dark:text-neutral-200 border-b border-neutral-200 dark:border-neutral-700 pb-2">{name}</h2>
          <ul class="space-y-2">
            {posts.slice(0, 10).map(post => (
              <li class="flex items-baseline">
                <span class="text-neutral-500 dark:text-neutral-400 text-xs w-[75px] flex-shrink-0">
                  [{post.data.pubDate.toISOString().slice(0, 7).replace('-', '/')}]
                </span>
                <a 
                  href={`/blog/${post.slug}`}
                  class="hover:text-cyan-600 dark:hover:text-cyan-400 line-clamp-1 ml-2"
                  title={post.data.title}
                >
                  {post.data.title}
                </a>
              </li>
            ))}
            {posts.length > 10 && (
              <li class="mt-2">
                <a 
                  href={`/categories/${category.toLowerCase().replace(/\s+/g, '-')}/${name.toLowerCase().replace(/\s+/g, '-')}`} 
                  class="text-xs text-cyan-600 dark:text-cyan-400 hover:underline"
                >
                  View all {posts.length} posts â†’
                </a>
              </li>
            )}
          </ul>
        </div>
      ))}
    </div>
  )}
</ThreeColumnLayout> 